SERVICE: 
# Showing Docker Compose configuration...
# docker compose --project-name sandbox-wordpress --file docker-compose.yml --file docker/base/docker-compose.yml --file docker/base/services/db/docker-compose.yml --file docker/base/services/redis/docker-compose.yml --file docker/base/services/nginx/docker-compose.yml --file docker/base/services/wordpress/docker-compose.yml --file docker/dev/docker-compose.yml --file docker/dev/services/wordpress/docker-compose.yml --file docker/dev/services/nginx/docker-compose.yml --env-file .env --env-file docker/base/.env --env-file docker/base/services/db/.env --env-file docker/base/services/nginx/.env --env-file docker/base/services/wordpress/.env --env-file docker/dev/.env --env-file docker/dev/services/wordpress/.env --env-file docker/dev/services/nginx/.env configname: sandbox-wordpress
services:
  db:
    container_name: sandbox-wordpress_db
    deploy:
      resources:
        limits:
          cpus: 1.5
          memory: "2147483648"
        reservations:
          cpus: 0.75
          memory: "1073741824"
    environment:
      MYSQL_DATABASE: sandbox_wordpress
      MYSQL_PASSWORD_FILE: /run/secrets/db_password
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_USER_FILE: /run/secrets/db_user
    healthcheck:
      test:
        - CMD-SHELL
        - mysqladmin ping -h localhost -u $$(cat $$MYSQL_USER_FILE) --password="$$(cat $$MYSQL_PASSWORD_FILE)" || exit 1
      timeout: 5s
      interval: 10s
      retries: 5
      start_period: 30s
    image: mariadb:10.11
    logging:
      driver: json-file
      options:
        compress: "false"
        max-file: "3"
        max-size: 15m
    networks:
      docker_network: null
    ports:
      - mode: ingress
        target: 3306
        published: "3306"
        protocol: tcp
    restart: unless-stopped
    secrets:
      - source: db_root_password
        target: /run/secrets/db_root_password
      - source: db_user
        target: /run/secrets/db_user
      - source: db_password
        target: /run/secrets/db_password
    volumes:
      - type: volume
        source: db_data
        target: /var/lib/mysql
        volume: {}
      - type: bind
        source: /c/Users/sprev/devel/sandbox-wordpress/logs/dev/db
        target: /var/log/mysql
        bind:
          create_host_path: true
  nginx:
    container_name: sandbox-wordpress_nginx
    depends_on:
      wordpress:
        condition: service_healthy
        required: true
    deploy:
      resources:
        limits:
          cpus: 1.5
          memory: "1073741824"
        reservations:
          cpus: 0.75
          memory: "536870912"
    entrypoint:
      - /usr/local/bin/entrypoint.sh
    environment:
      FASTCGI_PORT: "9000"
      NGINX_ACCESS_LOG: /var/log/nginx/access.log
      NGINX_CHARSET: utf-8
      NGINX_CHARSET_TYPES: ' text/plain text/css application/json application/javascript application/x-javascript application/xml application/xml+rss text/javascript image/svg+xml image/x-icon image/png image/jpeg image/gif'
      NGINX_CLIENT_BODY_BUFFER_SIZE: 16k
      NGINX_CLIENT_BODY_TIMEOUT: 60s
      NGINX_CLIENT_HEADER_BUFFER_SIZE: 1k
      NGINX_CLIENT_HEADER_TIMEOUT: 60s
      NGINX_CLIENT_MAX_BODY_SIZE: 100M
      NGINX_CONTENT_SECURITY_POLICY: '"default-src ''self''; img-src ''self'' data:; script-src ''self'' ''unsafe-inline'' ''unsafe-eval'' https://ajax.googleapis.com https://www.google-analytics.com; style-src ''self'' ''unsafe-inline'' https://fonts.googleapis.com; font-src ''self'' https://fonts.gstatic.com; connect-src ''self''; frame-src ''self'' https://www.youtube.com; object-src ''none''; base-uri ''self'';"'
      NGINX_CONTENT_SECURITY_POLICY_REPORT_ONLY: '"false"'
      NGINX_ENABLE_SSL: "true"
      NGINX_ERROR_LOG: /var/log/nginx/error.log
      NGINX_GZIP: "on"
      NGINX_GZIP_COMP_LEVEL: "5"
      NGINX_GZIP_DISABLE: msie6
      NGINX_GZIP_HTTP_VERSION: "1.1"
      NGINX_GZIP_MIN_LENGTH: "256"
      NGINX_GZIP_PROXIED: any
      NGINX_GZIP_TYPES: text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json application/font-woff application/font-woff2 font/woff font/woff2 image/svg+xml
      NGINX_GZIP_VARY: "on"
      NGINX_HSTS: "true"
      NGINX_HTTP2: "true"
      NGINX_INDEX: index.php index.html index.htm
      NGINX_KEEPALIVE_REQUESTS: "100"
      NGINX_KEEPALIVE_TIMEOUT: 65s
      NGINX_LARGE_CLIENT_HEADER_BUFFERS: 4 8k
      NGINX_LOG_FORMAT: $$remote_addr - $$remote_user [$$time_local] "$$request" $$status $$body_bytes_sent "$$http_referer" "$$http_user_agent" "$$http_x_forwarded_for"
      NGINX_PREFER_SERVER_CIPHERS: "off"
      NGINX_PROXY_BUFFER_SIZE: 16k
      NGINX_PROXY_BUFFERS: 8 8k
      NGINX_PROXY_BUSY_BUFFERS_SIZE: 16k
      NGINX_PROXY_CONNECT_TIMEOUT: 60s
      NGINX_PROXY_MAX_TEMP_FILE_SIZE: 1024m
      NGINX_PROXY_PASS: wordpress:9000
      NGINX_PROXY_READ_TIMEOUT: 60s
      NGINX_PROXY_SEND_TIMEOUT: 60s
      NGINX_PROXY_TEMP_DIR: /var/cache/nginx/proxy_temp
      NGINX_PROXY_TEMP_FILE_SIZE: 1024m
      NGINX_PROXY_TEMP_FILE_WRITE_SIZE: 1024m
      NGINX_PROXY_TIMEOUT: 60s
      NGINX_REFERRER_POLICY: '"no-referrer-when-downgrade"'
      NGINX_RESET_TIMEDOUT_CONNECTION: "on"
      NGINX_RESOLVER: 8.8.8.8
      NGINX_RESOLVER_TIMEOUT: 10s
      NGINX_RESOLVER_VALID: 10s
      NGINX_REWRITE: "true"
      NGINX_REWRITE_LOG: "off"
      NGINX_ROOT_DIR: /var/www/html
      NGINX_SEND_TIMEOUT: 60s
      NGINX_SENDFILE: "on"
      NGINX_SERVER_ALIAS: www.sandbox-wordpress.local
      NGINX_SERVER_NAME: sandbox-wordpress.local
      NGINX_SERVER_TOKENS: "off"
      NGINX_SSL_CERT: /etc/ssl/certs/ssl-cert-snakeoil.pem
      NGINX_SSL_CERT_KEY: /etc/ssl/private/ssl-cert-snakeoil.key
      NGINX_SSL_CIPHERS: ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305
      NGINX_SSL_DHPARAM: /etc/ssl/certs/dhparam.pem
      NGINX_SSL_PROTOCOLS: TLSv1.2 TLSv1.3
      NGINX_SSL_SESSION_CACHE: shared:SSL:10m
      NGINX_SSL_SESSION_TICKET: "on"
      NGINX_SSL_SESSION_TIMEOUT: 10m
      NGINX_SSL_STAPLING: "off"
      NGINX_SSL_STAPLING_VERIFY: "off"
      NGINX_SSL_TRUSTED_CERT: /etc/ssl/certs/ca-certificates.crt
      NGINX_SSL_VERIFY_CLIENT: "off"
      NGINX_SSL_VERIFY_DEPTH: "2"
      NGINX_STRICT_TRANSPORT_SECURITY: '"max-age=31536000; includeSubDomains; preload"'
      NGINX_TCP_NODELAY: "on"
      NGINX_TCP_NOPUSH: "on"
      NGINX_TYPES_HASH_BUCKET_SIZE: "128"
      NGINX_TYPES_HASH_MAX_SIZE: "2048"
      NGINX_UNDERSCORES_IN_HEADERS: "on"
      NGINX_WORKER_CONNECTIONS: "1024"
      NGINX_WORKER_PROCESSES: auto
      NGINX_WORKER_RLIMIT_NOFILE: "65536"
      NGINX_X_CONTENT_TYPE_OPTIONS: nosniff
      NGINX_X_FRAME_OPTIONS: SAMEORIGIN
      NGINX_X_XSS_PROTECTION: '"1; mode=block"'
      WP_HTTP_PORT: "80"
      WP_HTTPS_PORT: "443"
    extra_hosts:
      - sandbox-wordpress.local=127.0.0.1
    healthcheck:
      test:
        - CMD
        - wget
        - --quiet
        - --tries=1
        - --spider
        - http://127.0.0.1/health
      timeout: 10s
      interval: 30s
      retries: 3
      start_period: 20s
    image: nginx:1.25.5-alpine
    logging:
      driver: json-file
      options:
        compress: "false"
        max-file: "3"
        max-size: 10m
    networks:
      docker_network: null
    ports:
      - mode: ingress
        target: 80
        published: "8081"
        protocol: tcp
      - mode: ingress
        target: 443
        published: "8443"
        protocol: tcp
    restart: unless-stopped
    volumes:
      - type: bind
        source: /c/Users/sprev/devel/sandbox-wordpress/docker/bin/entrypoint.sh
        target: /usr/local/bin/entrypoint.sh
        bind:
          create_host_path: true
      - type: bind
        source: /c/Users/sprev/devel/sandbox-wordpress/docker/dev/conf/nginx-conf
        target: /etc/conf/nginx
        bind:
          create_host_path: true
      - type: bind
        source: /c/Users/sprev/devel/sandbox-wordpress/docker/dev/conf/ssl
        target: /etc/ssl
        bind:
          create_host_path: true
      - type: volume
        source: wp_data
        target: /var/www/html
        volume: {}
      - type: bind
        source: /c/Users/sprev/devel/sandbox-wordpress/logs/dev/nginx
        target: /var/log/nginx
        bind:
          create_host_path: true
  redis:
    command:
      - sh
      - -c
      - redis-server --appendonly yes --requirepass $$(cat $${REDIS_PASSWORD_FILE:-/run/secrets/redis_password})
    container_name: sandbox-wordpress_redis
    deploy:
      resources:
        limits:
          cpus: 1.5
          memory: "2147483648"
        reservations:
          cpus: 0.75
          memory: "1073741824"
    environment:
      REDIS_PASSWORD_FILE: /run/secrets/redis_password
    healthcheck:
      test:
        - CMD-SHELL
        - REDISCLI_AUTH="$$(cat $$REDIS_PASSWORD_FILE)"; redis-cli ping | grep PONG
      timeout: 5s
      interval: 5s
      retries: 5
      start_period: 20s
    image: redis:7-alpine
    logging:
      driver: json-file
      options:
        compress: "false"
        max-file: "3"
        max-size: 15m
    networks:
      docker_network: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    restart: unless-stopped
    secrets:
      - source: redis_password
        target: /run/secrets/redis_password
    volumes:
      - type: volume
        source: redis_data
        target: /data
        volume: {}
  wordpress:
    container_name: sandbox-wordpress_wordpress
    depends_on:
      db:
        condition: service_healthy
        required: true
      redis:
        condition: service_healthy
        required: true
    deploy:
      resources:
        limits:
          cpus: 1.5
          memory: "1073741824"
        reservations:
          cpus: 0.75
          memory: "536870912"
    environment:
      FASTCGI_PORT: "9000"
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_NAME: sandbox_wordpress
      WORDPRESS_DB_PASSWORD_FILE: /run/secrets/db_password
      WORDPRESS_DB_USER_FILE: /run/secrets/db_user
      WP_CONFIG_EXTRA: "define('WP_HOME', 'https://sandbox-wordpress.local');\ndefine('WP_SITEURL', 'https://sandbox-wordpress.local');\ndefine('FORCE_SSL_ADMIN', true);\n// Reverse Proxy SSL Detection\nif (isset(['HTTP_X_FORWARDED_PROTO']) && ['HTTP_X_FORWARDED_PROTO'] === 'https') {\n  ['HTTPS'] = 'on';\n}\n// Alternative: For Load Balancer \nif (isset(['HTTP_X_FORWARDED_SSL']) && ['HTTP_X_FORWARDED_SSL'] === 'on') {\n  ['HTTPS'] = 'on';\n}      \n// Redis Object Cache Configuration\n# define('WP_REDIS_DISABLED', true); # Uncomment to disable Redis caching\ndefine('WP_REDIS_HOST', redis);\ndefine('WP_REDIS_PORT', 6379);\ndefine('WP_REDIS_PASSWORD', file_get_contents('/run/secrets/redis_password'));\ndefine('WP_REDIS_CLIENT', 'phpredis');          // Use phpredis client\ndefine('WP_REDIS_DATABASE', 0);\ndefine('WP_REDIS_TIMEOUT', 1);\ndefine('WP_REDIS_READ_TIMEOUT', 1);\ndefine('WP_REDIS_MAXTTL', 86400);\ndefine('WP_REDIS_SCHEME', 'tcp');\n\ndefine('DISABLE_WP_CRON', true);                  // Disable WP-Cron to use a real cron job instead\ndefine('XMLRPC_REQUEST', false);                  // Disable XML-RPC for security\ndefine('REST_API_DISABLED', false);               // completely disabling the REST API will break many WordPress functionalities\ndefine('HEARTBEAT_DISABLED', false);              // Heartbeat API is crucial for real-time communication in the WordPress admin area\ndefine('AUTOMATIC_UPDATER_DISABLED', true);       // Disable automatic updates\nadd_filter('show_admin_bar', '__return_false');   // Disable the admin bar for all users. While it cleans up the frontend, it removes convenient shortcuts for logged-in users. Consider if this is truly desired for all user roles.\nremove_action('wp_head', 'wp_generator');         // Disable the WordPress version in the HTML source\nremove_action('wp_head', 'print_emoji_detection_script', 7);   // Disable the emoji script\nremove_action('wp_print_styles', 'print_emoji_styles');        // Disable the REST API link in the HTML source\nremove_action('wp_head', 'rest_output_link_wp_head', 10);      // Disable the REST API link in the HTML source \nremove_action('wp_head', 'wp_oembed_add_discovery_links');     // Disable the oEmbed discovery links\nremove_action('wp_head', 'wp_oembed_add_host_js');             // Disable the oEmbed JavaScript\nadd_filter('the_generator', '__return_empty_string');          // Disable the WordPress version in the RSS feed\n// Disable the WordPress version in the HTML source\nadd_filter('style_loader_src', 'remove_wp_version_from_css_js', 9999);\nadd_filter('script_loader_src', 'remove_wp_version_from_css_js', 9999);\nfunction remove_wp_version_from_css_js() {\n    if (strpos(, 'ver=') !== false) {\n         = remove_query_arg('ver', );\n    }\n    return ;\n}\n// Cache-Konfiguration\ndefine('WP_CACHE', true);\ndefine('WP_CACHE_KEY_SALT', 'sandbox-wordpress_'); \n// Additional security settings\ndefine('FORCE_SSL_LOGIN', true);\ndefine('DISALLOW_FILE_EDIT', true);\ndefine('WP_ALLOW_REPAIR', false);\ndefine('WP_POST_REVISIONS', 5);\ndefine('AUTOSAVE_INTERVAL', 300); # 5 minutes\ndefine('WP_MEMORY_LIMIT', '256M');\ndefine('WP_MAX_MEMORY_LIMIT', '512M');\n// Debugging settings\n# Uncomment the following lines to disable debugging\n# define('WP_DEBUG', false); #\n# define('WP_DEBUG_LOG', false); #\n# define('WP_DEBUG_DISPLAY', false); #\n# @ini_set('display_errors', 0); #\n"
      WP_DEBUG: "true"
      WP_DEBUG_DISPLAY: "false"
      WP_DEBUG_LOG: /var/www/html/wp-content/logs/debug.log
      WP_DEBUG_LOG_DIR: /var/www/html/wp-content/logs
    healthcheck:
      test:
        - CMD
        - /usr/local/bin/combined-healthcheck.sh
      timeout: 5s
      interval: 10s
      retries: 5
      start_period: 30s
    image: wordpress:6.4-php8.2-fpm-alpine
    logging:
      driver: json-file
      options:
        compress: "false"
        max-file: "3"
        max-size: 10m
    networks:
      docker_network: null
    restart: unless-stopped
    secrets:
      - source: db_user
        target: /run/secrets/db_user
      - source: db_password
        target: /run/secrets/db_password
      - source: redis_password
        target: /run/secrets/redis_password
    volumes:
      - type: bind
        source: C:\Users\sprev\devel\sandbox-wordpress\docker\base\services\wordpress\php\wp-healthcheck.php
        target: /opt/php-extra/wp-healthcheck.php
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\sprev\devel\sandbox-wordpress\docker\base\services\wordpress\bin\combined-healthcheck.sh
        target: /usr/local/bin/combined-healthcheck.sh
        bind:
          create_host_path: true
      - type: volume
        source: wp_data
        target: /var/www/html
        volume: {}
      - type: bind
        source: C:\Users\sprev\devel\sandbox-wordpress\logs\dev\wordpress
        target: /var/www/html/wp-content/logs
        bind:
          create_host_path: true
networks:
  docker_network:
    name: sandbox-wordpress_docker_network
    driver: bridge
volumes:
  db_data:
    name: sandbox-wordpress_db_data
  redis_data:
    name: sandbox-wordpress_redis_data
  wp_data:
    name: sandbox-wordpress_wp_data
secrets:
  db_password:
    name: sandbox-wordpress_db_password
    file: /c/Users/sprev/devel/sandbox-wordpress/docker/dev/conf/secrets/db_password.txt
  db_root_password:
    name: sandbox-wordpress_db_root_password
    file: /c/Users/sprev/devel/sandbox-wordpress/docker/dev/conf/secrets/db_root_password.txt
  db_user:
    name: sandbox-wordpress_db_user
    file: /c/Users/sprev/devel/sandbox-wordpress/docker/dev/conf/secrets/db_user.txt
  redis_password:
    name: sandbox-wordpress_redis_password
    file: /c/Users/sprev/devel/sandbox-wordpress/docker/dev/conf/secrets/redis_password.txt
